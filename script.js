let money = 25000;
let betChoice = null;
let taiCount = 0;
let xiuCount = 0;
let winCount = 0;
let loseCount = 0;
let houseMoney = 1000000; // Qu·ªπ nh√† c√°i
let betAmount = 100; // S·ªë ti·ªÅn c∆∞·ª£c m·∫∑c ƒë·ªãnh

// C·∫≠p nh·∫≠t s·ªë ti·ªÅn hi·ªÉn th·ªã
function updateMoney() {
    document.getElementById("money").textContent = money;
    document.getElementById("house-money").textContent = houseMoney;

    if (money <= 0) {
        document.getElementById("reset-money-btn").style.display = "block";
    } else {
        document.getElementById("reset-money-btn").style.display = "none";
    }
}

// ƒê·∫∑t c∆∞·ª£c
function placeBet(choice) {
    if (money < betAmount) {
        alert("B·∫°n kh√¥ng ƒë·ªß ti·ªÅn ƒë·ªÉ c∆∞·ª£c!");
        return;
    }

    betChoice = choice;
    document.getElementById("roll-btn").disabled = false;
    document.getElementById("cancel-bet-btn").disabled = false;

    alert(`B·∫°n ƒë√£ c∆∞·ª£c ${choice} v·ªõi m·ª©c c∆∞·ª£c ${betAmount}üí∞`);
    startCountdown();
}

// H·ªßy c∆∞·ª£c
function cancelBet() {
    if (betChoice) {
        document.getElementById("countdown").textContent = "";
        document.getElementById("roll-btn").disabled = true;
        document.getElementById("cancel-bet-btn").disabled = true;
        betChoice = null;
        alert("B·∫°n ƒë√£ h·ªßy c∆∞·ª£c v√† nh·∫≠n l·∫°i ti·ªÅn!");
    }
}

// B·∫Øt ƒë·∫ßu ƒë·∫øm ng∆∞·ª£c tr∆∞·ªõc khi l·∫Øc x√∫c x·∫Øc
function startCountdown() {
    let countdownElement = document.getElementById("countdown");
    let rollButton = document.getElementById("roll-btn");
    rollButton.disabled = true;

    let timeLeft = 3;
    countdownElement.textContent = `L·∫Øc sau: ${timeLeft}s`;

    let countdownInterval = setInterval(() => {
        timeLeft--;
        if (timeLeft > 0) {
            countdownElement.textContent = `L·∫Øc sau: ${timeLeft}s`;
        } else {
            clearInterval(countdownInterval);
            countdownElement.textContent = "";
            rollButton.disabled = false;
        }
    }, 1000);
}

// Ki·ªÉm tra x√°c su·∫•t "n·ªï h≈©"
const jackpotRates = [
    { chance: 50, multiplier: 1, message: "B·∫°n ƒë√£ nh·∫≠n l·∫°i s·ªë ti·ªÅn c∆∞·ª£c!" },
    { chance: 30, multiplier: 2, message: "N·ªï h≈© üéâ Nh·∫≠n g·∫•p ƒë√¥i s·ªë ti·ªÅn c∆∞·ª£c!" },
    { chance: 15, multiplier: 0, message: "N·ªï d√°i ü§° Kh√¥ng nh·∫≠n ƒë∆∞·ª£c g√¨!" },
    { chance: 10, multiplier: 5, message: "C≈®NG MAY M·∫ÆN ƒê·∫§Y üí• Nh·∫≠n x5 s·ªë ti·ªÅn c∆∞·ª£c!" },
    { chance: 0.1, multiplier: 100, message: "T√ÄI L·ªòC QU√Å L·ªöN üî• Nh·∫≠n x100 s·ªë ti·ªÅn c∆∞·ª£c!!!" }
];

function checkJackpot() {
    let random = Math.random() * 100;
    let cumulativeChance = 0;

    for (let jackpot of jackpotRates) {
        cumulativeChance += jackpot.chance;
        if (random <= cumulativeChance) {
            showJackpotPopup(jackpot.message, betAmount * jackpot.multiplier);
            return jackpot.multiplier;
        }
    }
    return 1;
}

// Hi·ªÉn th·ªã th√¥ng b√°o "n·ªï h≈©"
function showJackpotPopup(message, reward) {
    let popup = document.getElementById("jackpot-popup");
    let popupMessage = document.getElementById("jackpot-message");
    let popupAmount = document.getElementById("jackpot-amount");

    popupMessage.textContent = message;
    popupAmount.textContent = `+${reward}üí∞`;
    popup.style.display = "block";

    setTimeout(() => {
        popup.style.display = "none";
    }, 3000);
}

// L·∫Øc x√∫c x·∫Øc
function rollDice() {
    if (!betChoice) {
        alert("B·∫°n c·∫ßn ch·ªçn c∆∞·ª£c tr∆∞·ªõc!");
        return;
    }

    let num1 = Math.floor(Math.random() * 6) + 1;
    let num2 = Math.floor(Math.random() * 6) + 1;
    let num3 = Math.floor(Math.random() * 6) + 1;
    let total = num1 + num2 + num3;
    let result = total >= 11 ? "T√†i" : "X·ªâu";

    let multiplier = checkJackpot(); // Ki·ªÉm tra "n·ªï h≈©"
    let finalWinAmount = betAmount * multiplier;

    if (betChoice === result) {
        money += finalWinAmount;
        houseMoney -= finalWinAmount;
        winCount++;
    } else {
        money -= betAmount;
        houseMoney += betAmount;
        loseCount++;
    }

    updateMoney();
    document.getElementById("result").textContent = `T·ªïng: ${total} - K·∫øt qu·∫£: ${result}`;

    document.getElementById("roll-btn").disabled = true;
    document.getElementById("cancel-bet-btn").disabled = true;
    betChoice = null;
}

// Ch·ªçn m·ª©c c∆∞·ª£c
function setBet(multiplier) {
    if (multiplier === 'all') {
        betAmount = money;
    } else {
        betAmount = 100 * multiplier;
    }

    if (betAmount > money) {
        betAmount = money;
    }

    document.getElementById("bet-amount-text").textContent = betAmount;
}
